# Precompiler options
CPP_OPTIONS =   -DHOST=\"LinuxIFC\" \
		-DMPI -DMPI_BLOCK=8000 -Duse_collective \
		-DscaLAPACK -DMPI_INPLACE \
		-DCACHE_SIZE=4000 \
		-Davoidalloc \
		-Dvasp6 \
		-Duse_bse_te \
		-Dtbdyn \
		-D_OPENMP

CPP 		= fpp -f_com=no -free -w0 $*$(FUFFIX) $*$(SUFFIX) $(CPP_OPTIONS)

FC 		= mpiifx -qopenmp -mprefer-vector-width=512 -O3 -xCORE-AVX512
FCL 		= mpiifx -mprefer-vector-width=512 -O3 -xCORE-AVX512

FREE 		= -free -names lowercase

FFLAGS 		= -assume byterecl -w

OFLAG 		= -O3
OFLAG_IN 	= $(OFLAG)
DEBUG 		= -O0

OBJECTS 	= fftmpiw.o fftmpi_map.o fft3dlib.o fftw3d.o
OBJECTS_O1 += fftw3d.o fftmpi.o fftmpiw.o
OBJECTS_O2 += fft3dlib.o

# For what used to be vasp.5.lib
CPP_LIB 	= $(CPP)
FC_LIB 		= $(FC)
CC_LIB 		= icx
CFLAGS_LIB 	= -O0
FFLAGS_LIB 	= -O0
FREE_LIB 	= $(FREE)
OBJECTS_LIB	= linpack_double.o getshmem.o

# For the parser library
CXX_PARS 	= icpx
LLIBS 		+= -lstdc++

# Normally no need to change this
SRCDIR = ../../src
BINDIR = ../../bin

# Intel MKL (FFTW, BLAS, LAPACK, and scaLAPACK)
MKL_PATH 	= $(MKLROOT)/lib/intel64
BLAS 		= -L${MKLROOT}/lib/intel64 -lmkl_intel_lp64 -lmkl_intel_thread -lmkl_core -liomp5 -lpthread -lm -ldl
LAPACK 		=
BLACS 		= -lmkl_blacs_intelmpi_lp64
SCALAPACK 	= -lmkl_scalapack_lp64 $(BLACS)
INCS 		= -I$(MKLROOT)/include/fftw -I$(MKLROOT)/include
LLIBS 		+= $(SCALAPACK) $(LAPACK) $(BLAS)

#================================================
# GPU Stuff
CPP_GPU = -DCUDA_GPU -DRPROMU_CPROJ_OVERLAP -DUSE_PINNED_MEMORY -DCUFFT_MIN=28 -UscaLAPACK
OBJECTS_GPU = fftmpiw.o fftmpi_map.o fft3dlib.o fftw3d_gpu.o fftmpiw_gpu.o

CC = icc
CXX = icpc
CFLAGS = -fPIC -DADD_ -Wall -DMAGMA_WITH_MKL -DMAGMA_SETAFFINITY -DGPUSHMEM=300 -DHAVE_CUBLAS

CUDA_ROOT ?= /usr/local/cuda/
NVCC := $(CUDA_ROOT)/bin/nvcc -ccbin=icc
CUDA_LIB := -L$(CUDA_ROOT)/lib64 -lnvToolsExt -lcudart -lcuda -lcufft -lcublas
GENCODE_ARCH := -gencode=arch=compute_30,code=\"sm_30,compute_30\" \
	-gencode=arch=compute_35,code=\"sm_35,compute_35\" \
	-gencode=arch=compute_60,code=\"sm_60,compute_60\"

MPI_INC = $(I_MPI_ROOT)/include64/

